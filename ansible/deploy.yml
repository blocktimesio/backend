---
- name: Deploy a new server
  hosts: all
  gather_facts: no

  roles:
    - { role: Bessonov.docker, docker_engine_version: "17.06.2", ansible_distribution: "Ubuntu" }
    - { role: Bessonov.docker-compose, docker_compose_version: "1.16.0" }

  vars:
    git_url: 'git@github.com:TRANSCRYPT/transcrypt.server.api.git'
    repo_dir: /opt/app/
    service_to_up: nginx sftp

  vars_prompt:
    - name: 'git_ssh_key_path'
      prompt: 'GitHub key path'
      default: '~/.ssh/transcrypt_git_api'

  handlers:
    - name: Restart ssh
      service: name=ssh state=restarted

  tasks:
    - name: Update all packages to the latest version
      apt:
        upgrade: dist
    - name: Install the packages list
      apt: name={{ item }} state=present
      with_items:
        - mc
        - make
        - git
        - lynx
        - htop
        - nmap
        - curl
        - bash-completion

    - name: Creates ~/.ssh/ dirrectory
      file: path=~/.ssh state=directory
    - name: Copy ~/.ssh/id_rsa.pub to ~/.ssh/authorized_keys
      copy:
        src: ~/.ssh/id_rsa.pub
        dest: ~/.ssh/authorized_keys
        mode: 0600
        owner: root
        group: root

    - name: Check local SSH private GIT key file
      stat:
        path: "{{ git_ssh_key_path }}"
      register: git_key_priv_path
    - debug:
        msg: "GitHub SSH private key does not exists"
      when: git_key_priv_path.stat.exists is not defined

    - name: Check local SSH public GIT key file
      stat:
        path: "{{ git_ssh_key_path }}.pub"
      register: git_key_pub_path
    - debug:
        msg: "GitHub SSH public key does not exists"
      when: git_key_pub_path.stat.exists is not defined

    - name: Copy GitHub SSH full key
      copy:
        src: "{{ item.src }}"
        dest: "~/.ssh/{{ item.dest }}"
      with_items:
        - { src: "{{ git_ssh_key_path }}", dest: "id_rsa" }
        - { src: '{{ git_ssh_key_path }}.pub', dest: 'id_rsa.pub' }
    - name: Clone repo
      git: repo={{ git_url }} dest=/opt/app
           accept_hostkey=yes force=yes recursive=no

    - name: Add bash-completion script to ~/.bashrc
      lineinfile: dest=~/.bashrc line='{{item}}'
      with_items:
        - ''
        - 'if ! shopt -oq posix; then'
        - '  if [ -f /usr/share/bash-completion/bash_completion ]; then'
        - '    . /usr/share/bash-completion/bash_completion'
        - '  elif [ -f /etc/bash_completion ]; then'
        - '    . /etc/bash_completion'
        - '  fi'
        - 'fi'

    - name: Disallow password authentication
      lineinfile: dest=/etc/ssh/sshd_config
                  regexp="^PasswordAuthentication"
                  line="PasswordAuthentication no"
                  state=present
      notify: Restart ssh

    - name: Run docker-compose
      command: docker-compose {{ item }}
      args:
        chdir: "{{ repo_dir }}"
      with_items:
        - build
        - up -d {{ service_to_up }}
